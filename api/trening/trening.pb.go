// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.19.4
// source: api/trening/trening.proto

package grpcserver

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	duration "github.com/golang/protobuf/ptypes/duration"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "github.com/mwitkow/go-proto-validators"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type UserActivity int32

const (
	UserActivity_Basic  UserActivity = 0
	UserActivity_Low    UserActivity = 1
	UserActivity_Light  UserActivity = 2
	UserActivity_Medium UserActivity = 3
	UserActivity_High   UserActivity = 4
)

// Enum value maps for UserActivity.
var (
	UserActivity_name = map[int32]string{
		0: "Basic",
		1: "Low",
		2: "Light",
		3: "Medium",
		4: "High",
	}
	UserActivity_value = map[string]int32{
		"Basic":  0,
		"Low":    1,
		"Light":  2,
		"Medium": 3,
		"High":   4,
	}
)

func (x UserActivity) Enum() *UserActivity {
	p := new(UserActivity)
	*p = x
	return p
}

func (x UserActivity) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UserActivity) Descriptor() protoreflect.EnumDescriptor {
	return file_api_trening_trening_proto_enumTypes[0].Descriptor()
}

func (UserActivity) Type() protoreflect.EnumType {
	return &file_api_trening_trening_proto_enumTypes[0]
}

func (x UserActivity) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UserActivity.Descriptor instead.
func (UserActivity) EnumDescriptor() ([]byte, []int) {
	return file_api_trening_trening_proto_rawDescGZIP(), []int{0}
}

type UserDiet int32

const (
	UserDiet_Balanced    UserDiet = 0
	UserDiet_Low_fat     UserDiet = 1
	UserDiet_Low_carbs   UserDiet = 2
	UserDiet_Low_protein UserDiet = 3
)

// Enum value maps for UserDiet.
var (
	UserDiet_name = map[int32]string{
		0: "Balanced",
		1: "Low_fat",
		2: "Low_carbs",
		3: "Low_protein",
	}
	UserDiet_value = map[string]int32{
		"Balanced":    0,
		"Low_fat":     1,
		"Low_carbs":   2,
		"Low_protein": 3,
	}
)

func (x UserDiet) Enum() *UserDiet {
	p := new(UserDiet)
	*p = x
	return p
}

func (x UserDiet) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UserDiet) Descriptor() protoreflect.EnumDescriptor {
	return file_api_trening_trening_proto_enumTypes[1].Descriptor()
}

func (UserDiet) Type() protoreflect.EnumType {
	return &file_api_trening_trening_proto_enumTypes[1]
}

func (x UserDiet) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UserDiet.Descriptor instead.
func (UserDiet) EnumDescriptor() ([]byte, []int) {
	return file_api_trening_trening_proto_rawDescGZIP(), []int{1}
}

type UserType int32

const (
	UserType_USER_TYPE_UNKNOWN UserType = 0
	UserType_USER_TYPE_ADMIN   UserType = 1
	UserType_USER_TYPE_USER    UserType = 2
)

// Enum value maps for UserType.
var (
	UserType_name = map[int32]string{
		0: "USER_TYPE_UNKNOWN",
		1: "USER_TYPE_ADMIN",
		2: "USER_TYPE_USER",
	}
	UserType_value = map[string]int32{
		"USER_TYPE_UNKNOWN": 0,
		"USER_TYPE_ADMIN":   1,
		"USER_TYPE_USER":    2,
	}
)

func (x UserType) Enum() *UserType {
	p := new(UserType)
	*p = x
	return p
}

func (x UserType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UserType) Descriptor() protoreflect.EnumDescriptor {
	return file_api_trening_trening_proto_enumTypes[2].Descriptor()
}

func (UserType) Type() protoreflect.EnumType {
	return &file_api_trening_trening_proto_enumTypes[2]
}

func (x UserType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UserType.Descriptor instead.
func (UserType) EnumDescriptor() ([]byte, []int) {
	return file_api_trening_trening_proto_rawDescGZIP(), []int{2}
}

type StatusTrening int32

const (
	StatusTrening_Unknown StatusTrening = 0
	StatusTrening_Create  StatusTrening = 1
	StatusTrening_Start   StatusTrening = 2
	StatusTrening_Stop    StatusTrening = 3
	StatusTrening_Pause   StatusTrening = 4
	StatusTrening_Break   StatusTrening = 5
	StatusTrening_Finish  StatusTrening = 6
)

// Enum value maps for StatusTrening.
var (
	StatusTrening_name = map[int32]string{
		0: "Unknown",
		1: "Create",
		2: "Start",
		3: "Stop",
		4: "Pause",
		5: "Break",
		6: "Finish",
	}
	StatusTrening_value = map[string]int32{
		"Unknown": 0,
		"Create":  1,
		"Start":   2,
		"Stop":    3,
		"Pause":   4,
		"Break":   5,
		"Finish":  6,
	}
)

func (x StatusTrening) Enum() *StatusTrening {
	p := new(StatusTrening)
	*p = x
	return p
}

func (x StatusTrening) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StatusTrening) Descriptor() protoreflect.EnumDescriptor {
	return file_api_trening_trening_proto_enumTypes[3].Descriptor()
}

func (StatusTrening) Type() protoreflect.EnumType {
	return &file_api_trening_trening_proto_enumTypes[3]
}

func (x StatusTrening) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StatusTrening.Descriptor instead.
func (StatusTrening) EnumDescriptor() ([]byte, []int) {
	return file_api_trening_trening_proto_rawDescGZIP(), []int{3}
}

type ExerciseType int32

const (
	ExerciseType_arms     ExerciseType = 0
	ExerciseType_legs     ExerciseType = 1
	ExerciseType_press    ExerciseType = 2
	ExerciseType_back     ExerciseType = 3
	ExerciseType_chest    ExerciseType = 4
	ExerciseType_shoulder ExerciseType = 5
	ExerciseType_triceps  ExerciseType = 6
	ExerciseType_biceps   ExerciseType = 7
	ExerciseType_other    ExerciseType = 8
)

// Enum value maps for ExerciseType.
var (
	ExerciseType_name = map[int32]string{
		0: "arms",
		1: "legs",
		2: "press",
		3: "back",
		4: "chest",
		5: "shoulder",
		6: "triceps",
		7: "biceps",
		8: "other",
	}
	ExerciseType_value = map[string]int32{
		"arms":     0,
		"legs":     1,
		"press":    2,
		"back":     3,
		"chest":    4,
		"shoulder": 5,
		"triceps":  6,
		"biceps":   7,
		"other":    8,
	}
)

func (x ExerciseType) Enum() *ExerciseType {
	p := new(ExerciseType)
	*p = x
	return p
}

func (x ExerciseType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ExerciseType) Descriptor() protoreflect.EnumDescriptor {
	return file_api_trening_trening_proto_enumTypes[4].Descriptor()
}

func (ExerciseType) Type() protoreflect.EnumType {
	return &file_api_trening_trening_proto_enumTypes[4]
}

func (x ExerciseType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ExerciseType.Descriptor instead.
func (ExerciseType) EnumDescriptor() ([]byte, []int) {
	return file_api_trening_trening_proto_rawDescGZIP(), []int{4}
}

type ParametersUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Weight        int32        `protobuf:"varint,1,opt,name=weight,proto3" json:"weight,omitempty"`
	Height        int32        `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
	Age           int32        `protobuf:"varint,3,opt,name=age,proto3" json:"age,omitempty"`
	Gender        int32        `protobuf:"varint,4,opt,name=gender,proto3" json:"gender,omitempty"`
	Activity      UserActivity `protobuf:"varint,5,opt,name=activity,proto3,enum=trening.UserActivity" json:"activity,omitempty"`
	Diet          UserDiet     `protobuf:"varint,6,opt,name=diet,proto3,enum=trening.UserDiet" json:"diet,omitempty"`
	DesiredWeight int32        `protobuf:"varint,7,opt,name=desired_weight,json=desiredWeight,proto3" json:"desired_weight,omitempty"`
	Eat           int32        `protobuf:"varint,8,opt,name=eat,proto3" json:"eat,omitempty"`
	Username      string       `protobuf:"bytes,9,opt,name=username,proto3" json:"username,omitempty"`
	Uid           string       `protobuf:"bytes,10,opt,name=uid,proto3" json:"uid,omitempty"`
	Image         string       `protobuf:"bytes,11,opt,name=image,proto3" json:"image,omitempty"`
	Type          UserType     `protobuf:"varint,12,opt,name=type,proto3,enum=trening.UserType" json:"type,omitempty"`
}

func (x *ParametersUser) Reset() {
	*x = ParametersUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_trening_trening_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParametersUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParametersUser) ProtoMessage() {}

func (x *ParametersUser) ProtoReflect() protoreflect.Message {
	mi := &file_api_trening_trening_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParametersUser.ProtoReflect.Descriptor instead.
func (*ParametersUser) Descriptor() ([]byte, []int) {
	return file_api_trening_trening_proto_rawDescGZIP(), []int{0}
}

func (x *ParametersUser) GetWeight() int32 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *ParametersUser) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *ParametersUser) GetAge() int32 {
	if x != nil {
		return x.Age
	}
	return 0
}

func (x *ParametersUser) GetGender() int32 {
	if x != nil {
		return x.Gender
	}
	return 0
}

func (x *ParametersUser) GetActivity() UserActivity {
	if x != nil {
		return x.Activity
	}
	return UserActivity_Basic
}

func (x *ParametersUser) GetDiet() UserDiet {
	if x != nil {
		return x.Diet
	}
	return UserDiet_Balanced
}

func (x *ParametersUser) GetDesiredWeight() int32 {
	if x != nil {
		return x.DesiredWeight
	}
	return 0
}

func (x *ParametersUser) GetEat() int32 {
	if x != nil {
		return x.Eat
	}
	return 0
}

func (x *ParametersUser) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *ParametersUser) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *ParametersUser) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *ParametersUser) GetType() UserType {
	if x != nil {
		return x.Type
	}
	return UserType_USER_TYPE_UNKNOWN
}

type CreateParametersUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Weight        int32        `protobuf:"varint,1,opt,name=weight,proto3" json:"weight,omitempty"`
	Height        int32        `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
	Age           int32        `protobuf:"varint,3,opt,name=age,proto3" json:"age,omitempty"`
	Gender        int32        `protobuf:"varint,4,opt,name=gender,proto3" json:"gender,omitempty"`
	Activity      UserActivity `protobuf:"varint,5,opt,name=activity,proto3,enum=trening.UserActivity" json:"activity,omitempty"`
	Diet          UserDiet     `protobuf:"varint,6,opt,name=diet,proto3,enum=trening.UserDiet" json:"diet,omitempty"`
	DesiredWeight int32        `protobuf:"varint,7,opt,name=desired_weight,json=desiredWeight,proto3" json:"desired_weight,omitempty"`
	Eat           int32        `protobuf:"varint,8,opt,name=eat,proto3" json:"eat,omitempty"`
}

func (x *CreateParametersUserRequest) Reset() {
	*x = CreateParametersUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_trening_trening_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateParametersUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateParametersUserRequest) ProtoMessage() {}

func (x *CreateParametersUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_trening_trening_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateParametersUserRequest.ProtoReflect.Descriptor instead.
func (*CreateParametersUserRequest) Descriptor() ([]byte, []int) {
	return file_api_trening_trening_proto_rawDescGZIP(), []int{1}
}

func (x *CreateParametersUserRequest) GetWeight() int32 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *CreateParametersUserRequest) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *CreateParametersUserRequest) GetAge() int32 {
	if x != nil {
		return x.Age
	}
	return 0
}

func (x *CreateParametersUserRequest) GetGender() int32 {
	if x != nil {
		return x.Gender
	}
	return 0
}

func (x *CreateParametersUserRequest) GetActivity() UserActivity {
	if x != nil {
		return x.Activity
	}
	return UserActivity_Basic
}

func (x *CreateParametersUserRequest) GetDiet() UserDiet {
	if x != nil {
		return x.Diet
	}
	return UserDiet_Balanced
}

func (x *CreateParametersUserRequest) GetDesiredWeight() int32 {
	if x != nil {
		return x.DesiredWeight
	}
	return 0
}

func (x *CreateParametersUserRequest) GetEat() int32 {
	if x != nil {
		return x.Eat
	}
	return 0
}

type CreateParametersUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  bool   `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *CreateParametersUserResponse) Reset() {
	*x = CreateParametersUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_trening_trening_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateParametersUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateParametersUserResponse) ProtoMessage() {}

func (x *CreateParametersUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_trening_trening_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateParametersUserResponse.ProtoReflect.Descriptor instead.
func (*CreateParametersUserResponse) Descriptor() ([]byte, []int) {
	return file_api_trening_trening_proto_rawDescGZIP(), []int{2}
}

func (x *CreateParametersUserResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *CreateParametersUserResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type UpdateUserParamsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Weight        int32        `protobuf:"varint,1,opt,name=weight,proto3" json:"weight,omitempty"`
	Height        int32        `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
	Age           int32        `protobuf:"varint,3,opt,name=age,proto3" json:"age,omitempty"`
	Gender        int32        `protobuf:"varint,4,opt,name=gender,proto3" json:"gender,omitempty"`
	Activity      UserActivity `protobuf:"varint,5,opt,name=activity,proto3,enum=trening.UserActivity" json:"activity,omitempty"`
	Diet          UserDiet     `protobuf:"varint,6,opt,name=diet,proto3,enum=trening.UserDiet" json:"diet,omitempty"`
	DesiredWeight int32        `protobuf:"varint,7,opt,name=desired_weight,json=desiredWeight,proto3" json:"desired_weight,omitempty"`
	Eat           int32        `protobuf:"varint,8,opt,name=eat,proto3" json:"eat,omitempty"`
	Uid           string       `protobuf:"bytes,9,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *UpdateUserParamsRequest) Reset() {
	*x = UpdateUserParamsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_trening_trening_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserParamsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserParamsRequest) ProtoMessage() {}

func (x *UpdateUserParamsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_trening_trening_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserParamsRequest.ProtoReflect.Descriptor instead.
func (*UpdateUserParamsRequest) Descriptor() ([]byte, []int) {
	return file_api_trening_trening_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateUserParamsRequest) GetWeight() int32 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *UpdateUserParamsRequest) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *UpdateUserParamsRequest) GetAge() int32 {
	if x != nil {
		return x.Age
	}
	return 0
}

func (x *UpdateUserParamsRequest) GetGender() int32 {
	if x != nil {
		return x.Gender
	}
	return 0
}

func (x *UpdateUserParamsRequest) GetActivity() UserActivity {
	if x != nil {
		return x.Activity
	}
	return UserActivity_Basic
}

func (x *UpdateUserParamsRequest) GetDiet() UserDiet {
	if x != nil {
		return x.Diet
	}
	return UserDiet_Balanced
}

func (x *UpdateUserParamsRequest) GetDesiredWeight() int32 {
	if x != nil {
		return x.DesiredWeight
	}
	return 0
}

func (x *UpdateUserParamsRequest) GetEat() int32 {
	if x != nil {
		return x.Eat
	}
	return 0
}

func (x *UpdateUserParamsRequest) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

type UpdateUserParamsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  bool   `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *UpdateUserParamsResponse) Reset() {
	*x = UpdateUserParamsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_trening_trening_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserParamsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserParamsResponse) ProtoMessage() {}

func (x *UpdateUserParamsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_trening_trening_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserParamsResponse.ProtoReflect.Descriptor instead.
func (*UpdateUserParamsResponse) Descriptor() ([]byte, []int) {
	return file_api_trening_trening_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateUserParamsResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *UpdateUserParamsResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type DetailParametersUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DetailParametersUserRequest) Reset() {
	*x = DetailParametersUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_trening_trening_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DetailParametersUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetailParametersUserRequest) ProtoMessage() {}

func (x *DetailParametersUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_trening_trening_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetailParametersUserRequest.ProtoReflect.Descriptor instead.
func (*DetailParametersUserRequest) Descriptor() ([]byte, []int) {
	return file_api_trening_trening_proto_rawDescGZIP(), []int{5}
}

func (x *DetailParametersUserRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DetailParametersUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  bool            `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Message string          `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    *ParametersUser `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *DetailParametersUserResponse) Reset() {
	*x = DetailParametersUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_trening_trening_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DetailParametersUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetailParametersUserResponse) ProtoMessage() {}

func (x *DetailParametersUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_trening_trening_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetailParametersUserResponse.ProtoReflect.Descriptor instead.
func (*DetailParametersUserResponse) Descriptor() ([]byte, []int) {
	return file_api_trening_trening_proto_rawDescGZIP(), []int{6}
}

func (x *DetailParametersUserResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *DetailParametersUserResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *DetailParametersUserResponse) GetData() *ParametersUser {
	if x != nil {
		return x.Data
	}
	return nil
}

type Trening struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string               `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Interval  *duration.Duration   `protobuf:"bytes,2,opt,name=interval,proto3" json:"interval,omitempty"`
	Exercises []*Exercise          `protobuf:"bytes,3,rep,name=exercises,proto3" json:"exercises,omitempty"`
	Uid       string               `protobuf:"bytes,4,opt,name=uid,proto3" json:"uid,omitempty"`
	Status    StatusTrening        `protobuf:"varint,5,opt,name=status,proto3,enum=trening.StatusTrening" json:"status,omitempty"`
	Date      *timestamp.Timestamp `protobuf:"bytes,6,opt,name=date,proto3" json:"date,omitempty"`
	Image     string               `protobuf:"bytes,7,opt,name=image,proto3" json:"image,omitempty"`
}

func (x *Trening) Reset() {
	*x = Trening{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_trening_trening_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Trening) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Trening) ProtoMessage() {}

func (x *Trening) ProtoReflect() protoreflect.Message {
	mi := &file_api_trening_trening_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Trening.ProtoReflect.Descriptor instead.
func (*Trening) Descriptor() ([]byte, []int) {
	return file_api_trening_trening_proto_rawDescGZIP(), []int{7}
}

func (x *Trening) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Trening) GetInterval() *duration.Duration {
	if x != nil {
		return x.Interval
	}
	return nil
}

func (x *Trening) GetExercises() []*Exercise {
	if x != nil {
		return x.Exercises
	}
	return nil
}

func (x *Trening) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *Trening) GetStatus() StatusTrening {
	if x != nil {
		return x.Status
	}
	return StatusTrening_Unknown
}

func (x *Trening) GetDate() *timestamp.Timestamp {
	if x != nil {
		return x.Date
	}
	return nil
}

func (x *Trening) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

type CreateTreningRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string               `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Interval  *duration.Duration   `protobuf:"bytes,2,opt,name=interval,proto3" json:"interval,omitempty"`
	Exercises []*Exercise          `protobuf:"bytes,3,rep,name=exercises,proto3" json:"exercises,omitempty"`
	Date      *timestamp.Timestamp `protobuf:"bytes,4,opt,name=date,proto3" json:"date,omitempty"`
}

func (x *CreateTreningRequest) Reset() {
	*x = CreateTreningRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_trening_trening_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTreningRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTreningRequest) ProtoMessage() {}

func (x *CreateTreningRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_trening_trening_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTreningRequest.ProtoReflect.Descriptor instead.
func (*CreateTreningRequest) Descriptor() ([]byte, []int) {
	return file_api_trening_trening_proto_rawDescGZIP(), []int{8}
}

func (x *CreateTreningRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateTreningRequest) GetInterval() *duration.Duration {
	if x != nil {
		return x.Interval
	}
	return nil
}

func (x *CreateTreningRequest) GetExercises() []*Exercise {
	if x != nil {
		return x.Exercises
	}
	return nil
}

func (x *CreateTreningRequest) GetDate() *timestamp.Timestamp {
	if x != nil {
		return x.Date
	}
	return nil
}

type CreateTreningResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  bool   `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *CreateTreningResponse) Reset() {
	*x = CreateTreningResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_trening_trening_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTreningResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTreningResponse) ProtoMessage() {}

func (x *CreateTreningResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_trening_trening_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTreningResponse.ProtoReflect.Descriptor instead.
func (*CreateTreningResponse) Descriptor() ([]byte, []int) {
	return file_api_trening_trening_proto_rawDescGZIP(), []int{9}
}

func (x *CreateTreningResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *CreateTreningResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ListTreningRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status StatusTrening `protobuf:"varint,1,opt,name=status,proto3,enum=trening.StatusTrening" json:"status,omitempty"`
}

func (x *ListTreningRequest) Reset() {
	*x = ListTreningRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_trening_trening_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTreningRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTreningRequest) ProtoMessage() {}

func (x *ListTreningRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_trening_trening_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTreningRequest.ProtoReflect.Descriptor instead.
func (*ListTreningRequest) Descriptor() ([]byte, []int) {
	return file_api_trening_trening_proto_rawDescGZIP(), []int{10}
}

func (x *ListTreningRequest) GetStatus() StatusTrening {
	if x != nil {
		return x.Status
	}
	return StatusTrening_Unknown
}

type ListTreningResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  bool       `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Message string     `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    []*Trening `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *ListTreningResponse) Reset() {
	*x = ListTreningResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_trening_trening_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTreningResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTreningResponse) ProtoMessage() {}

func (x *ListTreningResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_trening_trening_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTreningResponse.ProtoReflect.Descriptor instead.
func (*ListTreningResponse) Descriptor() ([]byte, []int) {
	return file_api_trening_trening_proto_rawDescGZIP(), []int{11}
}

func (x *ListTreningResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *ListTreningResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ListTreningResponse) GetData() []*Trening {
	if x != nil {
		return x.Data
	}
	return nil
}

type DetailTreningRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *DetailTreningRequest) Reset() {
	*x = DetailTreningRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_trening_trening_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DetailTreningRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetailTreningRequest) ProtoMessage() {}

func (x *DetailTreningRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_trening_trening_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetailTreningRequest.ProtoReflect.Descriptor instead.
func (*DetailTreningRequest) Descriptor() ([]byte, []int) {
	return file_api_trening_trening_proto_rawDescGZIP(), []int{12}
}

func (x *DetailTreningRequest) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

type DetailTreningResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  bool     `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Message string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    *Trening `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *DetailTreningResponse) Reset() {
	*x = DetailTreningResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_trening_trening_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DetailTreningResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetailTreningResponse) ProtoMessage() {}

func (x *DetailTreningResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_trening_trening_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetailTreningResponse.ProtoReflect.Descriptor instead.
func (*DetailTreningResponse) Descriptor() ([]byte, []int) {
	return file_api_trening_trening_proto_rawDescGZIP(), []int{13}
}

func (x *DetailTreningResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *DetailTreningResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *DetailTreningResponse) GetData() *Trening {
	if x != nil {
		return x.Data
	}
	return nil
}

type UpdateTreningStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status StatusTrening `protobuf:"varint,1,opt,name=status,proto3,enum=trening.StatusTrening" json:"status,omitempty"`
	Uid    string        `protobuf:"bytes,2,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *UpdateTreningStatusRequest) Reset() {
	*x = UpdateTreningStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_trening_trening_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTreningStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTreningStatusRequest) ProtoMessage() {}

func (x *UpdateTreningStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_trening_trening_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTreningStatusRequest.ProtoReflect.Descriptor instead.
func (*UpdateTreningStatusRequest) Descriptor() ([]byte, []int) {
	return file_api_trening_trening_proto_rawDescGZIP(), []int{14}
}

func (x *UpdateTreningStatusRequest) GetStatus() StatusTrening {
	if x != nil {
		return x.Status
	}
	return StatusTrening_Unknown
}

func (x *UpdateTreningStatusRequest) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

type UpdateTreningStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  bool   `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *UpdateTreningStatusResponse) Reset() {
	*x = UpdateTreningStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_trening_trening_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTreningStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTreningStatusResponse) ProtoMessage() {}

func (x *UpdateTreningStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_trening_trening_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTreningStatusResponse.ProtoReflect.Descriptor instead.
func (*UpdateTreningStatusResponse) Descriptor() ([]byte, []int) {
	return file_api_trening_trening_proto_rawDescGZIP(), []int{15}
}

func (x *UpdateTreningStatusResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *UpdateTreningStatusResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type UpdateTreningExercisesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Exercises []*Exercise `protobuf:"bytes,1,rep,name=exercises,proto3" json:"exercises,omitempty"`
	Uid       string      `protobuf:"bytes,2,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *UpdateTreningExercisesRequest) Reset() {
	*x = UpdateTreningExercisesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_trening_trening_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTreningExercisesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTreningExercisesRequest) ProtoMessage() {}

func (x *UpdateTreningExercisesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_trening_trening_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTreningExercisesRequest.ProtoReflect.Descriptor instead.
func (*UpdateTreningExercisesRequest) Descriptor() ([]byte, []int) {
	return file_api_trening_trening_proto_rawDescGZIP(), []int{16}
}

func (x *UpdateTreningExercisesRequest) GetExercises() []*Exercise {
	if x != nil {
		return x.Exercises
	}
	return nil
}

func (x *UpdateTreningExercisesRequest) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

type UpdateTreningExercisesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  bool   `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *UpdateTreningExercisesResponse) Reset() {
	*x = UpdateTreningExercisesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_trening_trening_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTreningExercisesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTreningExercisesResponse) ProtoMessage() {}

func (x *UpdateTreningExercisesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_trening_trening_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTreningExercisesResponse.ProtoReflect.Descriptor instead.
func (*UpdateTreningExercisesResponse) Descriptor() ([]byte, []int) {
	return file_api_trening_trening_proto_rawDescGZIP(), []int{17}
}

func (x *UpdateTreningExercisesResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *UpdateTreningExercisesResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type Exercise struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                string             `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Duration            *duration.Duration `protobuf:"bytes,2,opt,name=duration,proto3" json:"duration,omitempty"`
	Relax               *duration.Duration `protobuf:"bytes,3,opt,name=relax,proto3" json:"relax,omitempty"`
	Count               int32              `protobuf:"varint,4,opt,name=count,proto3" json:"count,omitempty"`
	NumberOfSets        int32              `protobuf:"varint,5,opt,name=number_of_sets,json=numberOfSets,proto3" json:"number_of_sets,omitempty"`
	NumberOfRepetitions int32              `protobuf:"varint,6,opt,name=number_of_repetitions,json=numberOfRepetitions,proto3" json:"number_of_repetitions,omitempty"`
	Type                ExerciseType       `protobuf:"varint,7,opt,name=type,proto3,enum=trening.ExerciseType" json:"type,omitempty"`
	Uid                 string             `protobuf:"bytes,8,opt,name=uid,proto3" json:"uid,omitempty"`
	Image               string             `protobuf:"bytes,9,opt,name=image,proto3" json:"image,omitempty"`
	Video               string             `protobuf:"bytes,10,opt,name=video,proto3" json:"video,omitempty"`
	Description         string             `protobuf:"bytes,11,opt,name=description,proto3" json:"description,omitempty"`
	Technique           string             `protobuf:"bytes,12,opt,name=technique,proto3" json:"technique,omitempty"`
	Mistake             string             `protobuf:"bytes,13,opt,name=mistake,proto3" json:"mistake,omitempty"`
	Weight              int32              `protobuf:"varint,14,opt,name=weight,proto3" json:"weight,omitempty"`
	Category            string             `protobuf:"bytes,15,opt,name=category,proto3" json:"category,omitempty"`
	Subcategory         string             `protobuf:"bytes,16,opt,name=subcategory,proto3" json:"subcategory,omitempty"`
}

func (x *Exercise) Reset() {
	*x = Exercise{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_trening_trening_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Exercise) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Exercise) ProtoMessage() {}

func (x *Exercise) ProtoReflect() protoreflect.Message {
	mi := &file_api_trening_trening_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Exercise.ProtoReflect.Descriptor instead.
func (*Exercise) Descriptor() ([]byte, []int) {
	return file_api_trening_trening_proto_rawDescGZIP(), []int{18}
}

func (x *Exercise) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Exercise) GetDuration() *duration.Duration {
	if x != nil {
		return x.Duration
	}
	return nil
}

func (x *Exercise) GetRelax() *duration.Duration {
	if x != nil {
		return x.Relax
	}
	return nil
}

func (x *Exercise) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *Exercise) GetNumberOfSets() int32 {
	if x != nil {
		return x.NumberOfSets
	}
	return 0
}

func (x *Exercise) GetNumberOfRepetitions() int32 {
	if x != nil {
		return x.NumberOfRepetitions
	}
	return 0
}

func (x *Exercise) GetType() ExerciseType {
	if x != nil {
		return x.Type
	}
	return ExerciseType_arms
}

func (x *Exercise) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *Exercise) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *Exercise) GetVideo() string {
	if x != nil {
		return x.Video
	}
	return ""
}

func (x *Exercise) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Exercise) GetTechnique() string {
	if x != nil {
		return x.Technique
	}
	return ""
}

func (x *Exercise) GetMistake() string {
	if x != nil {
		return x.Mistake
	}
	return ""
}

func (x *Exercise) GetWeight() int32 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *Exercise) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *Exercise) GetSubcategory() string {
	if x != nil {
		return x.Subcategory
	}
	return ""
}

type CreateExerciseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                string             `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Duration            *duration.Duration `protobuf:"bytes,2,opt,name=duration,proto3" json:"duration,omitempty"`
	Relax               *duration.Duration `protobuf:"bytes,3,opt,name=relax,proto3" json:"relax,omitempty"`
	Count               int32              `protobuf:"varint,4,opt,name=count,proto3" json:"count,omitempty"`
	NumberOfSets        int32              `protobuf:"varint,5,opt,name=number_of_sets,json=numberOfSets,proto3" json:"number_of_sets,omitempty"`
	NumberOfRepetitions int32              `protobuf:"varint,6,opt,name=number_of_repetitions,json=numberOfRepetitions,proto3" json:"number_of_repetitions,omitempty"`
	Type                ExerciseType       `protobuf:"varint,7,opt,name=type,proto3,enum=trening.ExerciseType" json:"type,omitempty"`
}

func (x *CreateExerciseRequest) Reset() {
	*x = CreateExerciseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_trening_trening_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateExerciseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateExerciseRequest) ProtoMessage() {}

func (x *CreateExerciseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_trening_trening_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateExerciseRequest.ProtoReflect.Descriptor instead.
func (*CreateExerciseRequest) Descriptor() ([]byte, []int) {
	return file_api_trening_trening_proto_rawDescGZIP(), []int{19}
}

func (x *CreateExerciseRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateExerciseRequest) GetDuration() *duration.Duration {
	if x != nil {
		return x.Duration
	}
	return nil
}

func (x *CreateExerciseRequest) GetRelax() *duration.Duration {
	if x != nil {
		return x.Relax
	}
	return nil
}

func (x *CreateExerciseRequest) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *CreateExerciseRequest) GetNumberOfSets() int32 {
	if x != nil {
		return x.NumberOfSets
	}
	return 0
}

func (x *CreateExerciseRequest) GetNumberOfRepetitions() int32 {
	if x != nil {
		return x.NumberOfRepetitions
	}
	return 0
}

func (x *CreateExerciseRequest) GetType() ExerciseType {
	if x != nil {
		return x.Type
	}
	return ExerciseType_arms
}

type CreateExerciseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  bool   `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *CreateExerciseResponse) Reset() {
	*x = CreateExerciseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_trening_trening_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateExerciseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateExerciseResponse) ProtoMessage() {}

func (x *CreateExerciseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_trening_trening_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateExerciseResponse.ProtoReflect.Descriptor instead.
func (*CreateExerciseResponse) Descriptor() ([]byte, []int) {
	return file_api_trening_trening_proto_rawDescGZIP(), []int{20}
}

func (x *CreateExerciseResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *CreateExerciseResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ListExerciseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *ListExerciseRequest) Reset() {
	*x = ListExerciseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_trening_trening_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListExerciseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListExerciseRequest) ProtoMessage() {}

func (x *ListExerciseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_trening_trening_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListExerciseRequest.ProtoReflect.Descriptor instead.
func (*ListExerciseRequest) Descriptor() ([]byte, []int) {
	return file_api_trening_trening_proto_rawDescGZIP(), []int{21}
}

func (x *ListExerciseRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type ListExerciseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  bool        `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Message string      `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    []*Exercise `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *ListExerciseResponse) Reset() {
	*x = ListExerciseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_trening_trening_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListExerciseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListExerciseResponse) ProtoMessage() {}

func (x *ListExerciseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_trening_trening_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListExerciseResponse.ProtoReflect.Descriptor instead.
func (*ListExerciseResponse) Descriptor() ([]byte, []int) {
	return file_api_trening_trening_proto_rawDescGZIP(), []int{22}
}

func (x *ListExerciseResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *ListExerciseResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ListExerciseResponse) GetData() []*Exercise {
	if x != nil {
		return x.Data
	}
	return nil
}

type DetailExerciseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *DetailExerciseRequest) Reset() {
	*x = DetailExerciseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_trening_trening_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DetailExerciseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetailExerciseRequest) ProtoMessage() {}

func (x *DetailExerciseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_trening_trening_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetailExerciseRequest.ProtoReflect.Descriptor instead.
func (*DetailExerciseRequest) Descriptor() ([]byte, []int) {
	return file_api_trening_trening_proto_rawDescGZIP(), []int{23}
}

func (x *DetailExerciseRequest) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

type DetailExerciseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  bool      `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Message string    `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    *Exercise `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *DetailExerciseResponse) Reset() {
	*x = DetailExerciseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_trening_trening_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DetailExerciseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetailExerciseResponse) ProtoMessage() {}

func (x *DetailExerciseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_trening_trening_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetailExerciseResponse.ProtoReflect.Descriptor instead.
func (*DetailExerciseResponse) Descriptor() ([]byte, []int) {
	return file_api_trening_trening_proto_rawDescGZIP(), []int{24}
}

func (x *DetailExerciseResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *DetailExerciseResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *DetailExerciseResponse) GetData() *Exercise {
	if x != nil {
		return x.Data
	}
	return nil
}

type UploadImageUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *UploadImageUserRequest) Reset() {
	*x = UploadImageUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_trening_trening_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadImageUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadImageUserRequest) ProtoMessage() {}

func (x *UploadImageUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_trening_trening_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadImageUserRequest.ProtoReflect.Descriptor instead.
func (*UploadImageUserRequest) Descriptor() ([]byte, []int) {
	return file_api_trening_trening_proto_rawDescGZIP(), []int{25}
}

func (x *UploadImageUserRequest) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type UploadImageUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  bool   `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *UploadImageUserResponse) Reset() {
	*x = UploadImageUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_trening_trening_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadImageUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadImageUserResponse) ProtoMessage() {}

func (x *UploadImageUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_trening_trening_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadImageUserResponse.ProtoReflect.Descriptor instead.
func (*UploadImageUserResponse) Descriptor() ([]byte, []int) {
	return file_api_trening_trening_proto_rawDescGZIP(), []int{26}
}

func (x *UploadImageUserResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *UploadImageUserResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_api_trening_trening_proto protoreflect.FileDescriptor

var file_api_trening_trening_proto_rawDesc = []byte{
	0x0a, 0x19, 0x61, 0x70, 0x69, 0x2f, 0x74, 0x72, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x2f, 0x74, 0x72,
	0x65, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x74, 0x72, 0x65,
	0x6e, 0x69, 0x6e, 0x67, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x6f,
	0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x37, 0x74, 0x68, 0x69, 0x72, 0x64, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2f,
	0x6d, 0x77, 0x69, 0x74, 0x6b, 0x6f, 0x77, 0x2f, 0x67, 0x6f, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2d, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x2f, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe8, 0x02, 0x0a,
	0x0e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x55, 0x73, 0x65, 0x72, 0x12,
	0x16, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12,
	0x10, 0x0a, 0x03, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x61, 0x67,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x31, 0x0a, 0x08, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x74, 0x72,
	0x65, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x52, 0x08, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x12, 0x25, 0x0a, 0x04,
	0x64, 0x69, 0x65, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x74, 0x72, 0x65,
	0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x44, 0x69, 0x65, 0x74, 0x52, 0x04, 0x64,
	0x69, 0x65, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x5f, 0x77,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x64, 0x65, 0x73,
	0x69, 0x72, 0x65, 0x64, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x61,
	0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x65, 0x61, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x12, 0x25, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11,
	0x2e, 0x74, 0x72, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x8a, 0x02, 0x0a, 0x1b, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x67, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x12, 0x31, 0x0a, 0x08, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x74, 0x72, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x08, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x12, 0x25, 0x0a, 0x04, 0x64, 0x69, 0x65, 0x74, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x11, 0x2e, 0x74, 0x72, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x44, 0x69, 0x65, 0x74, 0x52, 0x04, 0x64, 0x69, 0x65, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x64,
	0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x5f, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0d, 0x64, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x57, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x03, 0x65, 0x61, 0x74, 0x22, 0x50, 0x0a, 0x1c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x98, 0x02, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x03, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x31, 0x0a, 0x08,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15,
	0x2e, 0x74, 0x72, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x08, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x12,
	0x25, 0x0a, 0x04, 0x64, 0x69, 0x65, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e,
	0x74, 0x72, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x44, 0x69, 0x65, 0x74,
	0x52, 0x04, 0x64, 0x69, 0x65, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x65, 0x73, 0x69, 0x72, 0x65,
	0x64, 0x5f, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d,
	0x64, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x10, 0x0a,
	0x03, 0x65, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x65, 0x61, 0x74, 0x12,
	0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69,
	0x64, 0x22, 0x4c, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22,
	0x2d, 0x0a, 0x1b, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74,
	0x65, 0x72, 0x73, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x7d,
	0x0a, 0x1c, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65,
	0x72, 0x73, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x2b, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x74, 0x72, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74,
	0x65, 0x72, 0x73, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x8d, 0x02,
	0x0a, 0x07, 0x54, 0x72, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x35, 0x0a,
	0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x76, 0x61, 0x6c, 0x12, 0x2f, 0x0a, 0x09, 0x65, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x74, 0x72, 0x65, 0x6e, 0x69, 0x6e,
	0x67, 0x2e, 0x45, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x52, 0x09, 0x65, 0x78, 0x65, 0x72,
	0x63, 0x69, 0x73, 0x65, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x2e, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x74, 0x72, 0x65, 0x6e, 0x69, 0x6e,
	0x67, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x54, 0x72, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2e, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x22, 0xca, 0x01,
	0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x72, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x58, 0x01, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x12, 0x2f, 0x0a, 0x09, 0x65, 0x78, 0x65,
	0x72, 0x63, 0x69, 0x73, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x74,
	0x72, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x45, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x52,
	0x09, 0x65, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x73, 0x12, 0x2e, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x22, 0x49, 0x0a, 0x15, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x72, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x44, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x72, 0x65,
	0x6e, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x74, 0x72,
	0x65, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x54, 0x72, 0x65, 0x6e,
	0x69, 0x6e, 0x67, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x6d, 0x0a, 0x13, 0x4c,
	0x69, 0x73, 0x74, 0x54, 0x72, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x24, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x74, 0x72, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x54, 0x72, 0x65,
	0x6e, 0x69, 0x6e, 0x67, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x28, 0x0a, 0x14, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x54, 0x72, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x75, 0x69, 0x64, 0x22, 0x6f, 0x0a, 0x15, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x54, 0x72,
	0x65, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x24, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x74, 0x72, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x54, 0x72, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x5e, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54,
	0x72, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x74, 0x72, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x54, 0x72, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x75, 0x69, 0x64, 0x22, 0x4f, 0x0a, 0x1b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54,
	0x72, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x62, 0x0a, 0x1d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x72, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x45, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x09, 0x65, 0x78, 0x65, 0x72, 0x63,
	0x69, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x74, 0x72, 0x65,
	0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x45, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x52, 0x09, 0x65,
	0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x22, 0x52, 0x0a, 0x1e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x72, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x45, 0x78, 0x65, 0x72, 0x63,
	0x69, 0x73, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xaa,
	0x04, 0x0a, 0x08, 0x45, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x19, 0xe2, 0xdf, 0x1f, 0x15, 0x0a,
	0x11, 0x5e, 0x5b, 0x61, 0x2d, 0x7a, 0x41, 0x2d, 0x5a, 0x30, 0x2d, 0x39, 0x5f, 0x2e, 0x2d, 0x5d,
	0x2a, 0x24, 0x58, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x64, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x2f, 0x0a, 0x05, 0x72, 0x65, 0x6c, 0x61, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x72, 0x65, 0x6c,
	0x61, 0x78, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0e, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x5f, 0x6f, 0x66, 0x5f, 0x73, 0x65, 0x74, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0c, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x53, 0x65, 0x74, 0x73, 0x12, 0x32,
	0x0a, 0x15, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6f, 0x66, 0x5f, 0x72, 0x65, 0x70, 0x65,
	0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x13, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x52, 0x65, 0x70, 0x65, 0x74, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x29, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x15, 0x2e, 0x74, 0x72, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x45, 0x78, 0x65, 0x72, 0x63,
	0x69, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x75, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a,
	0x09, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x69, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x69,
	0x73, 0x74, 0x61, 0x6b, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x75, 0x62,
	0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x73, 0x75, 0x62, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x22, 0xae, 0x02, 0x0a, 0x15,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x64, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x2f, 0x0a, 0x05, 0x72, 0x65, 0x6c, 0x61, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x72, 0x65, 0x6c, 0x61,
	0x78, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0e, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x5f, 0x6f, 0x66, 0x5f, 0x73, 0x65, 0x74, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0c, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x53, 0x65, 0x74, 0x73, 0x12, 0x32, 0x0a,
	0x15, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6f, 0x66, 0x5f, 0x72, 0x65, 0x70, 0x65, 0x74,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x13, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x52, 0x65, 0x70, 0x65, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x29, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x15, 0x2e, 0x74, 0x72, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x45, 0x78, 0x65, 0x72, 0x63, 0x69,
	0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x4a, 0x0a, 0x16,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x29, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74,
	0x45, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x22, 0x6f, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x78, 0x65, 0x72, 0x63,
	0x69, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x25, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x74, 0x72,
	0x65, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x45, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x22, 0x29, 0x0a, 0x15, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x45, 0x78,
	0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a,
	0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x22,
	0x71, 0x0a, 0x16, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x45, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x25, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x74, 0x72, 0x65, 0x6e,
	0x69, 0x6e, 0x67, 0x2e, 0x45, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x22, 0x2c, 0x0a, 0x16, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x22, 0x4b, 0x0a, 0x17, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2a, 0x43, 0x0a,
	0x0c, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x12, 0x09, 0x0a,
	0x05, 0x42, 0x61, 0x73, 0x69, 0x63, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x4c, 0x6f, 0x77, 0x10,
	0x01, 0x12, 0x09, 0x0a, 0x05, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06,
	0x4d, 0x65, 0x64, 0x69, 0x75, 0x6d, 0x10, 0x03, 0x12, 0x08, 0x0a, 0x04, 0x48, 0x69, 0x67, 0x68,
	0x10, 0x04, 0x2a, 0x45, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x44, 0x69, 0x65, 0x74, 0x12, 0x0c,
	0x0a, 0x08, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x64, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07,
	0x4c, 0x6f, 0x77, 0x5f, 0x66, 0x61, 0x74, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x4c, 0x6f, 0x77,
	0x5f, 0x63, 0x61, 0x72, 0x62, 0x73, 0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x4c, 0x6f, 0x77, 0x5f,
	0x70, 0x72, 0x6f, 0x74, 0x65, 0x69, 0x6e, 0x10, 0x03, 0x2a, 0x4a, 0x0a, 0x08, 0x55, 0x73, 0x65,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x15, 0x0a, 0x11, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f,
	0x55, 0x53, 0x45, 0x52, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x41, 0x44, 0x4d, 0x49, 0x4e, 0x10,
	0x01, 0x12, 0x12, 0x0a, 0x0e, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55,
	0x53, 0x45, 0x52, 0x10, 0x02, 0x2a, 0x5f, 0x0a, 0x0d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x54,
	0x72, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77,
	0x6e, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x10, 0x01, 0x12,
	0x09, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x72, 0x74, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x53, 0x74,
	0x6f, 0x70, 0x10, 0x03, 0x12, 0x09, 0x0a, 0x05, 0x50, 0x61, 0x75, 0x73, 0x65, 0x10, 0x04, 0x12,
	0x09, 0x0a, 0x05, 0x42, 0x72, 0x65, 0x61, 0x6b, 0x10, 0x05, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x69,
	0x6e, 0x69, 0x73, 0x68, 0x10, 0x06, 0x2a, 0x74, 0x0a, 0x0c, 0x45, 0x78, 0x65, 0x72, 0x63, 0x69,
	0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x61, 0x72, 0x6d, 0x73, 0x10, 0x00,
	0x12, 0x08, 0x0a, 0x04, 0x6c, 0x65, 0x67, 0x73, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x70, 0x72,
	0x65, 0x73, 0x73, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x62, 0x61, 0x63, 0x6b, 0x10, 0x03, 0x12,
	0x09, 0x0a, 0x05, 0x63, 0x68, 0x65, 0x73, 0x74, 0x10, 0x04, 0x12, 0x0c, 0x0a, 0x08, 0x73, 0x68,
	0x6f, 0x75, 0x6c, 0x64, 0x65, 0x72, 0x10, 0x05, 0x12, 0x0b, 0x0a, 0x07, 0x74, 0x72, 0x69, 0x63,
	0x65, 0x70, 0x73, 0x10, 0x06, 0x12, 0x0a, 0x0a, 0x06, 0x62, 0x69, 0x63, 0x65, 0x70, 0x73, 0x10,
	0x07, 0x12, 0x09, 0x0a, 0x05, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x10, 0x08, 0x32, 0xf3, 0x0b, 0x0a,
	0x0e, 0x54, 0x72, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x80, 0x01, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65,
	0x74, 0x65, 0x72, 0x73, 0x55, 0x73, 0x65, 0x72, 0x12, 0x24, 0x2e, 0x74, 0x72, 0x65, 0x6e, 0x69,
	0x6e, 0x67, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74,
	0x65, 0x72, 0x73, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25,
	0x2e, 0x74, 0x72, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15, 0x22, 0x10, 0x2f,
	0x75, 0x73, 0x65, 0x72, 0x2f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x3a,
	0x01, 0x2a, 0x12, 0x7d, 0x0a, 0x14, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x55, 0x73, 0x65, 0x72, 0x12, 0x24, 0x2e, 0x74, 0x72, 0x65,
	0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x65, 0x74, 0x65, 0x72, 0x73, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x25, 0x2e, 0x74, 0x72, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x18, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x12, 0x12,
	0x10, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72,
	0x73, 0x12, 0x74, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x20, 0x2e, 0x74, 0x72, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x74, 0x72, 0x65, 0x6e, 0x69, 0x6e,
	0x67, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1b, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x15, 0x1a, 0x10, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65,
	0x74, 0x65, 0x72, 0x73, 0x3a, 0x01, 0x2a, 0x12, 0x6e, 0x0a, 0x0f, 0x55, 0x70, 0x6c, 0x6f, 0x61,
	0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1f, 0x2e, 0x74, 0x72, 0x65,
	0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x74, 0x72,
	0x65, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x16, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x10, 0x22, 0x0b, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x3a, 0x01, 0x2a, 0x28, 0x01, 0x12, 0x68, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x72, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x12, 0x1d, 0x2e, 0x74, 0x72, 0x65, 0x6e, 0x69,
	0x6e, 0x67, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x72, 0x65, 0x6e, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x74, 0x72, 0x65, 0x6e, 0x69, 0x6e,
	0x67, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x72, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x18, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x12, 0x22,
	0x0d, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x74, 0x72, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x3a, 0x01,
	0x2a, 0x12, 0x60, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x72, 0x65, 0x6e, 0x69, 0x6e, 0x67,
	0x12, 0x1b, 0x2e, 0x74, 0x72, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54,
	0x72, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e,
	0x74, 0x72, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x72, 0x65, 0x6e,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x16, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x10, 0x12, 0x0e, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x74, 0x72, 0x65, 0x6e, 0x69,
	0x6e, 0x67, 0x73, 0x12, 0x65, 0x0a, 0x0d, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x54, 0x72, 0x65,
	0x6e, 0x69, 0x6e, 0x67, 0x12, 0x1d, 0x2e, 0x74, 0x72, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x54, 0x72, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x74, 0x72, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x54, 0x72, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x15, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0f, 0x12, 0x0d, 0x2f, 0x75, 0x73,
	0x65, 0x72, 0x2f, 0x74, 0x72, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x12, 0x81, 0x01, 0x0a, 0x13, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x72, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x23, 0x2e, 0x74, 0x72, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x54, 0x72, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x74, 0x72, 0x65, 0x6e, 0x69, 0x6e,
	0x67, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x72, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1f, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x19, 0x1a, 0x14, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x74, 0x72, 0x65,
	0x6e, 0x69, 0x6e, 0x67, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x3a, 0x01, 0x2a, 0x12, 0x8d,
	0x01, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x72, 0x65, 0x6e, 0x69, 0x6e, 0x67,
	0x45, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x73, 0x12, 0x26, 0x2e, 0x74, 0x72, 0x65, 0x6e,
	0x69, 0x6e, 0x67, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x72, 0x65, 0x6e, 0x69, 0x6e,
	0x67, 0x45, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x27, 0x2e, 0x74, 0x72, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x54, 0x72, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x45, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x22, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x1c, 0x1a, 0x17, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x74, 0x72, 0x65, 0x6e, 0x69, 0x6e,
	0x67, 0x2f, 0x65, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x73, 0x3a, 0x01, 0x2a, 0x12, 0x6c,
	0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65,
	0x12, 0x1e, 0x2e, 0x74, 0x72, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x45, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1f, 0x2e, 0x74, 0x72, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x45, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x19, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13, 0x22, 0x0e, 0x2f, 0x75, 0x73, 0x65, 0x72,
	0x2f, 0x65, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x3a, 0x01, 0x2a, 0x12, 0x64, 0x0a, 0x0c,
	0x4c, 0x69, 0x73, 0x74, 0x45, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x12, 0x1c, 0x2e, 0x74,
	0x72, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x78, 0x65, 0x72, 0x63,
	0x69, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x74, 0x72, 0x65,
	0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x17, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x11, 0x12, 0x0f, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x65, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73,
	0x65, 0x73, 0x12, 0x73, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x78, 0x65, 0x72, 0x63, 0x69,
	0x73, 0x65, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x1c, 0x2e, 0x74, 0x72, 0x65, 0x6e,
	0x69, 0x6e, 0x67, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x74, 0x72, 0x65, 0x6e, 0x69, 0x6e,
	0x67, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x12, 0x17,
	0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x65, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x73, 0x2f,
	0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x69, 0x0a, 0x0e, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x45, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x12, 0x1e, 0x2e, 0x74, 0x72, 0x65, 0x6e,
	0x69, 0x6e, 0x67, 0x2e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x45, 0x78, 0x65, 0x72, 0x63, 0x69,
	0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x74, 0x72, 0x65, 0x6e,
	0x69, 0x6e, 0x67, 0x2e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x45, 0x78, 0x65, 0x72, 0x63, 0x69,
	0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x16, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x10, 0x12, 0x0e, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x65, 0x78, 0x65, 0x72, 0x63, 0x69,
	0x73, 0x65, 0x42, 0xf8, 0x01, 0x5a, 0x16, 0x61, 0x70, 0x69, 0x2f, 0x74, 0x72, 0x65, 0x6e, 0x69,
	0x6e, 0x67, 0x3b, 0x67, 0x72, 0x70, 0x63, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x92, 0x41, 0xdc,
	0x01, 0x12, 0x31, 0x0a, 0x0f, 0x54, 0x72, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x2d, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x22, 0x19, 0x0a, 0x07, 0x74, 0x72, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x12,
	0x0e, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x68, 0x6f, 0x73, 0x74, 0x3a, 0x38, 0x38, 0x34, 0x33, 0x32,
	0x03, 0x31, 0x2e, 0x30, 0x52, 0x3e, 0x0a, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12,
	0x33, 0x0a, 0x0c, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x20, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12,
	0x23, 0x0a, 0x21, 0x1a, 0x1f, 0x23, 0x2f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x5a, 0x59, 0x0a, 0x57, 0x0a, 0x06, 0x62, 0x65, 0x61, 0x72, 0x65, 0x72,
	0x12, 0x4d, 0x08, 0x02, 0x12, 0x38, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x20, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x2c, 0x20, 0x70, 0x72, 0x65, 0x66,
	0x69, 0x78, 0x65, 0x64, 0x20, 0x62, 0x79, 0x20, 0x42, 0x65, 0x61, 0x72, 0x65, 0x72, 0x3a, 0x20,
	0x42, 0x65, 0x61, 0x72, 0x65, 0x72, 0x20, 0x3c, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x3e, 0x1a, 0x0d,
	0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x02, 0x62,
	0x0c, 0x0a, 0x0a, 0x0a, 0x06, 0x62, 0x65, 0x61, 0x72, 0x65, 0x72, 0x12, 0x00, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_trening_trening_proto_rawDescOnce sync.Once
	file_api_trening_trening_proto_rawDescData = file_api_trening_trening_proto_rawDesc
)

func file_api_trening_trening_proto_rawDescGZIP() []byte {
	file_api_trening_trening_proto_rawDescOnce.Do(func() {
		file_api_trening_trening_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_trening_trening_proto_rawDescData)
	})
	return file_api_trening_trening_proto_rawDescData
}

var file_api_trening_trening_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_api_trening_trening_proto_msgTypes = make([]protoimpl.MessageInfo, 27)
var file_api_trening_trening_proto_goTypes = []interface{}{
	(UserActivity)(0),                      // 0: trening.UserActivity
	(UserDiet)(0),                          // 1: trening.UserDiet
	(UserType)(0),                          // 2: trening.UserType
	(StatusTrening)(0),                     // 3: trening.StatusTrening
	(ExerciseType)(0),                      // 4: trening.ExerciseType
	(*ParametersUser)(nil),                 // 5: trening.ParametersUser
	(*CreateParametersUserRequest)(nil),    // 6: trening.CreateParametersUserRequest
	(*CreateParametersUserResponse)(nil),   // 7: trening.CreateParametersUserResponse
	(*UpdateUserParamsRequest)(nil),        // 8: trening.UpdateUserParamsRequest
	(*UpdateUserParamsResponse)(nil),       // 9: trening.UpdateUserParamsResponse
	(*DetailParametersUserRequest)(nil),    // 10: trening.DetailParametersUserRequest
	(*DetailParametersUserResponse)(nil),   // 11: trening.DetailParametersUserResponse
	(*Trening)(nil),                        // 12: trening.Trening
	(*CreateTreningRequest)(nil),           // 13: trening.CreateTreningRequest
	(*CreateTreningResponse)(nil),          // 14: trening.CreateTreningResponse
	(*ListTreningRequest)(nil),             // 15: trening.ListTreningRequest
	(*ListTreningResponse)(nil),            // 16: trening.ListTreningResponse
	(*DetailTreningRequest)(nil),           // 17: trening.DetailTreningRequest
	(*DetailTreningResponse)(nil),          // 18: trening.DetailTreningResponse
	(*UpdateTreningStatusRequest)(nil),     // 19: trening.UpdateTreningStatusRequest
	(*UpdateTreningStatusResponse)(nil),    // 20: trening.UpdateTreningStatusResponse
	(*UpdateTreningExercisesRequest)(nil),  // 21: trening.UpdateTreningExercisesRequest
	(*UpdateTreningExercisesResponse)(nil), // 22: trening.UpdateTreningExercisesResponse
	(*Exercise)(nil),                       // 23: trening.Exercise
	(*CreateExerciseRequest)(nil),          // 24: trening.CreateExerciseRequest
	(*CreateExerciseResponse)(nil),         // 25: trening.CreateExerciseResponse
	(*ListExerciseRequest)(nil),            // 26: trening.ListExerciseRequest
	(*ListExerciseResponse)(nil),           // 27: trening.ListExerciseResponse
	(*DetailExerciseRequest)(nil),          // 28: trening.DetailExerciseRequest
	(*DetailExerciseResponse)(nil),         // 29: trening.DetailExerciseResponse
	(*UploadImageUserRequest)(nil),         // 30: trening.UploadImageUserRequest
	(*UploadImageUserResponse)(nil),        // 31: trening.UploadImageUserResponse
	(*duration.Duration)(nil),              // 32: google.protobuf.Duration
	(*timestamp.Timestamp)(nil),            // 33: google.protobuf.Timestamp
}
var file_api_trening_trening_proto_depIdxs = []int32{
	0,  // 0: trening.ParametersUser.activity:type_name -> trening.UserActivity
	1,  // 1: trening.ParametersUser.diet:type_name -> trening.UserDiet
	2,  // 2: trening.ParametersUser.type:type_name -> trening.UserType
	0,  // 3: trening.CreateParametersUserRequest.activity:type_name -> trening.UserActivity
	1,  // 4: trening.CreateParametersUserRequest.diet:type_name -> trening.UserDiet
	0,  // 5: trening.UpdateUserParamsRequest.activity:type_name -> trening.UserActivity
	1,  // 6: trening.UpdateUserParamsRequest.diet:type_name -> trening.UserDiet
	5,  // 7: trening.DetailParametersUserResponse.data:type_name -> trening.ParametersUser
	32, // 8: trening.Trening.interval:type_name -> google.protobuf.Duration
	23, // 9: trening.Trening.exercises:type_name -> trening.Exercise
	3,  // 10: trening.Trening.status:type_name -> trening.StatusTrening
	33, // 11: trening.Trening.date:type_name -> google.protobuf.Timestamp
	32, // 12: trening.CreateTreningRequest.interval:type_name -> google.protobuf.Duration
	23, // 13: trening.CreateTreningRequest.exercises:type_name -> trening.Exercise
	33, // 14: trening.CreateTreningRequest.date:type_name -> google.protobuf.Timestamp
	3,  // 15: trening.ListTreningRequest.status:type_name -> trening.StatusTrening
	12, // 16: trening.ListTreningResponse.data:type_name -> trening.Trening
	12, // 17: trening.DetailTreningResponse.data:type_name -> trening.Trening
	3,  // 18: trening.UpdateTreningStatusRequest.status:type_name -> trening.StatusTrening
	23, // 19: trening.UpdateTreningExercisesRequest.exercises:type_name -> trening.Exercise
	32, // 20: trening.Exercise.duration:type_name -> google.protobuf.Duration
	32, // 21: trening.Exercise.relax:type_name -> google.protobuf.Duration
	4,  // 22: trening.Exercise.type:type_name -> trening.ExerciseType
	32, // 23: trening.CreateExerciseRequest.duration:type_name -> google.protobuf.Duration
	32, // 24: trening.CreateExerciseRequest.relax:type_name -> google.protobuf.Duration
	4,  // 25: trening.CreateExerciseRequest.type:type_name -> trening.ExerciseType
	23, // 26: trening.ListExerciseResponse.data:type_name -> trening.Exercise
	23, // 27: trening.DetailExerciseResponse.data:type_name -> trening.Exercise
	6,  // 28: trening.TreningService.CreateParametersUser:input_type -> trening.CreateParametersUserRequest
	10, // 29: trening.TreningService.DetailParametersUser:input_type -> trening.DetailParametersUserRequest
	8,  // 30: trening.TreningService.UpdateUserParams:input_type -> trening.UpdateUserParamsRequest
	30, // 31: trening.TreningService.UploadImageUser:input_type -> trening.UploadImageUserRequest
	13, // 32: trening.TreningService.CreateTrening:input_type -> trening.CreateTreningRequest
	15, // 33: trening.TreningService.ListTrening:input_type -> trening.ListTreningRequest
	17, // 34: trening.TreningService.DetailTrening:input_type -> trening.DetailTreningRequest
	19, // 35: trening.TreningService.UpdateTreningStatus:input_type -> trening.UpdateTreningStatusRequest
	21, // 36: trening.TreningService.UpdateTreningExercises:input_type -> trening.UpdateTreningExercisesRequest
	24, // 37: trening.TreningService.CreateExercise:input_type -> trening.CreateExerciseRequest
	26, // 38: trening.TreningService.ListExercise:input_type -> trening.ListExerciseRequest
	26, // 39: trening.TreningService.ListExerciseDefault:input_type -> trening.ListExerciseRequest
	28, // 40: trening.TreningService.DetailExercise:input_type -> trening.DetailExerciseRequest
	7,  // 41: trening.TreningService.CreateParametersUser:output_type -> trening.CreateParametersUserResponse
	11, // 42: trening.TreningService.DetailParametersUser:output_type -> trening.DetailParametersUserResponse
	9,  // 43: trening.TreningService.UpdateUserParams:output_type -> trening.UpdateUserParamsResponse
	31, // 44: trening.TreningService.UploadImageUser:output_type -> trening.UploadImageUserResponse
	14, // 45: trening.TreningService.CreateTrening:output_type -> trening.CreateTreningResponse
	16, // 46: trening.TreningService.ListTrening:output_type -> trening.ListTreningResponse
	18, // 47: trening.TreningService.DetailTrening:output_type -> trening.DetailTreningResponse
	20, // 48: trening.TreningService.UpdateTreningStatus:output_type -> trening.UpdateTreningStatusResponse
	22, // 49: trening.TreningService.UpdateTreningExercises:output_type -> trening.UpdateTreningExercisesResponse
	25, // 50: trening.TreningService.CreateExercise:output_type -> trening.CreateExerciseResponse
	27, // 51: trening.TreningService.ListExercise:output_type -> trening.ListExerciseResponse
	27, // 52: trening.TreningService.ListExerciseDefault:output_type -> trening.ListExerciseResponse
	29, // 53: trening.TreningService.DetailExercise:output_type -> trening.DetailExerciseResponse
	41, // [41:54] is the sub-list for method output_type
	28, // [28:41] is the sub-list for method input_type
	28, // [28:28] is the sub-list for extension type_name
	28, // [28:28] is the sub-list for extension extendee
	0,  // [0:28] is the sub-list for field type_name
}

func init() { file_api_trening_trening_proto_init() }
func file_api_trening_trening_proto_init() {
	if File_api_trening_trening_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_trening_trening_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParametersUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_trening_trening_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateParametersUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_trening_trening_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateParametersUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_trening_trening_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserParamsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_trening_trening_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserParamsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_trening_trening_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DetailParametersUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_trening_trening_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DetailParametersUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_trening_trening_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Trening); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_trening_trening_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTreningRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_trening_trening_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTreningResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_trening_trening_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTreningRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_trening_trening_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTreningResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_trening_trening_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DetailTreningRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_trening_trening_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DetailTreningResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_trening_trening_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTreningStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_trening_trening_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTreningStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_trening_trening_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTreningExercisesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_trening_trening_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTreningExercisesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_trening_trening_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Exercise); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_trening_trening_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateExerciseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_trening_trening_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateExerciseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_trening_trening_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListExerciseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_trening_trening_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListExerciseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_trening_trening_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DetailExerciseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_trening_trening_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DetailExerciseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_trening_trening_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadImageUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_trening_trening_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadImageUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_trening_trening_proto_rawDesc,
			NumEnums:      5,
			NumMessages:   27,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_trening_trening_proto_goTypes,
		DependencyIndexes: file_api_trening_trening_proto_depIdxs,
		EnumInfos:         file_api_trening_trening_proto_enumTypes,
		MessageInfos:      file_api_trening_trening_proto_msgTypes,
	}.Build()
	File_api_trening_trening_proto = out.File
	file_api_trening_trening_proto_rawDesc = nil
	file_api_trening_trening_proto_goTypes = nil
	file_api_trening_trening_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// TreningServiceClient is the client API for TreningService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TreningServiceClient interface {
	CreateParametersUser(ctx context.Context, in *CreateParametersUserRequest, opts ...grpc.CallOption) (*CreateParametersUserResponse, error)
	DetailParametersUser(ctx context.Context, in *DetailParametersUserRequest, opts ...grpc.CallOption) (*DetailParametersUserResponse, error)
	UpdateUserParams(ctx context.Context, in *UpdateUserParamsRequest, opts ...grpc.CallOption) (*UpdateUserParamsResponse, error)
	UploadImageUser(ctx context.Context, opts ...grpc.CallOption) (TreningService_UploadImageUserClient, error)
	CreateTrening(ctx context.Context, in *CreateTreningRequest, opts ...grpc.CallOption) (*CreateTreningResponse, error)
	ListTrening(ctx context.Context, in *ListTreningRequest, opts ...grpc.CallOption) (*ListTreningResponse, error)
	DetailTrening(ctx context.Context, in *DetailTreningRequest, opts ...grpc.CallOption) (*DetailTreningResponse, error)
	UpdateTreningStatus(ctx context.Context, in *UpdateTreningStatusRequest, opts ...grpc.CallOption) (*UpdateTreningStatusResponse, error)
	UpdateTreningExercises(ctx context.Context, in *UpdateTreningExercisesRequest, opts ...grpc.CallOption) (*UpdateTreningExercisesResponse, error)
	CreateExercise(ctx context.Context, in *CreateExerciseRequest, opts ...grpc.CallOption) (*CreateExerciseResponse, error)
	ListExercise(ctx context.Context, in *ListExerciseRequest, opts ...grpc.CallOption) (*ListExerciseResponse, error)
	ListExerciseDefault(ctx context.Context, in *ListExerciseRequest, opts ...grpc.CallOption) (*ListExerciseResponse, error)
	DetailExercise(ctx context.Context, in *DetailExerciseRequest, opts ...grpc.CallOption) (*DetailExerciseResponse, error)
}

type treningServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewTreningServiceClient(cc grpc.ClientConnInterface) TreningServiceClient {
	return &treningServiceClient{cc}
}

func (c *treningServiceClient) CreateParametersUser(ctx context.Context, in *CreateParametersUserRequest, opts ...grpc.CallOption) (*CreateParametersUserResponse, error) {
	out := new(CreateParametersUserResponse)
	err := c.cc.Invoke(ctx, "/trening.TreningService/CreateParametersUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *treningServiceClient) DetailParametersUser(ctx context.Context, in *DetailParametersUserRequest, opts ...grpc.CallOption) (*DetailParametersUserResponse, error) {
	out := new(DetailParametersUserResponse)
	err := c.cc.Invoke(ctx, "/trening.TreningService/DetailParametersUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *treningServiceClient) UpdateUserParams(ctx context.Context, in *UpdateUserParamsRequest, opts ...grpc.CallOption) (*UpdateUserParamsResponse, error) {
	out := new(UpdateUserParamsResponse)
	err := c.cc.Invoke(ctx, "/trening.TreningService/UpdateUserParams", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *treningServiceClient) UploadImageUser(ctx context.Context, opts ...grpc.CallOption) (TreningService_UploadImageUserClient, error) {
	stream, err := c.cc.NewStream(ctx, &_TreningService_serviceDesc.Streams[0], "/trening.TreningService/UploadImageUser", opts...)
	if err != nil {
		return nil, err
	}
	x := &treningServiceUploadImageUserClient{stream}
	return x, nil
}

type TreningService_UploadImageUserClient interface {
	Send(*UploadImageUserRequest) error
	CloseAndRecv() (*UploadImageUserResponse, error)
	grpc.ClientStream
}

type treningServiceUploadImageUserClient struct {
	grpc.ClientStream
}

func (x *treningServiceUploadImageUserClient) Send(m *UploadImageUserRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *treningServiceUploadImageUserClient) CloseAndRecv() (*UploadImageUserResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(UploadImageUserResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *treningServiceClient) CreateTrening(ctx context.Context, in *CreateTreningRequest, opts ...grpc.CallOption) (*CreateTreningResponse, error) {
	out := new(CreateTreningResponse)
	err := c.cc.Invoke(ctx, "/trening.TreningService/CreateTrening", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *treningServiceClient) ListTrening(ctx context.Context, in *ListTreningRequest, opts ...grpc.CallOption) (*ListTreningResponse, error) {
	out := new(ListTreningResponse)
	err := c.cc.Invoke(ctx, "/trening.TreningService/ListTrening", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *treningServiceClient) DetailTrening(ctx context.Context, in *DetailTreningRequest, opts ...grpc.CallOption) (*DetailTreningResponse, error) {
	out := new(DetailTreningResponse)
	err := c.cc.Invoke(ctx, "/trening.TreningService/DetailTrening", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *treningServiceClient) UpdateTreningStatus(ctx context.Context, in *UpdateTreningStatusRequest, opts ...grpc.CallOption) (*UpdateTreningStatusResponse, error) {
	out := new(UpdateTreningStatusResponse)
	err := c.cc.Invoke(ctx, "/trening.TreningService/UpdateTreningStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *treningServiceClient) UpdateTreningExercises(ctx context.Context, in *UpdateTreningExercisesRequest, opts ...grpc.CallOption) (*UpdateTreningExercisesResponse, error) {
	out := new(UpdateTreningExercisesResponse)
	err := c.cc.Invoke(ctx, "/trening.TreningService/UpdateTreningExercises", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *treningServiceClient) CreateExercise(ctx context.Context, in *CreateExerciseRequest, opts ...grpc.CallOption) (*CreateExerciseResponse, error) {
	out := new(CreateExerciseResponse)
	err := c.cc.Invoke(ctx, "/trening.TreningService/CreateExercise", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *treningServiceClient) ListExercise(ctx context.Context, in *ListExerciseRequest, opts ...grpc.CallOption) (*ListExerciseResponse, error) {
	out := new(ListExerciseResponse)
	err := c.cc.Invoke(ctx, "/trening.TreningService/ListExercise", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *treningServiceClient) ListExerciseDefault(ctx context.Context, in *ListExerciseRequest, opts ...grpc.CallOption) (*ListExerciseResponse, error) {
	out := new(ListExerciseResponse)
	err := c.cc.Invoke(ctx, "/trening.TreningService/ListExerciseDefault", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *treningServiceClient) DetailExercise(ctx context.Context, in *DetailExerciseRequest, opts ...grpc.CallOption) (*DetailExerciseResponse, error) {
	out := new(DetailExerciseResponse)
	err := c.cc.Invoke(ctx, "/trening.TreningService/DetailExercise", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TreningServiceServer is the server API for TreningService service.
type TreningServiceServer interface {
	CreateParametersUser(context.Context, *CreateParametersUserRequest) (*CreateParametersUserResponse, error)
	DetailParametersUser(context.Context, *DetailParametersUserRequest) (*DetailParametersUserResponse, error)
	UpdateUserParams(context.Context, *UpdateUserParamsRequest) (*UpdateUserParamsResponse, error)
	UploadImageUser(TreningService_UploadImageUserServer) error
	CreateTrening(context.Context, *CreateTreningRequest) (*CreateTreningResponse, error)
	ListTrening(context.Context, *ListTreningRequest) (*ListTreningResponse, error)
	DetailTrening(context.Context, *DetailTreningRequest) (*DetailTreningResponse, error)
	UpdateTreningStatus(context.Context, *UpdateTreningStatusRequest) (*UpdateTreningStatusResponse, error)
	UpdateTreningExercises(context.Context, *UpdateTreningExercisesRequest) (*UpdateTreningExercisesResponse, error)
	CreateExercise(context.Context, *CreateExerciseRequest) (*CreateExerciseResponse, error)
	ListExercise(context.Context, *ListExerciseRequest) (*ListExerciseResponse, error)
	ListExerciseDefault(context.Context, *ListExerciseRequest) (*ListExerciseResponse, error)
	DetailExercise(context.Context, *DetailExerciseRequest) (*DetailExerciseResponse, error)
}

// UnimplementedTreningServiceServer can be embedded to have forward compatible implementations.
type UnimplementedTreningServiceServer struct {
}

func (*UnimplementedTreningServiceServer) CreateParametersUser(context.Context, *CreateParametersUserRequest) (*CreateParametersUserResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateParametersUser not implemented")
}
func (*UnimplementedTreningServiceServer) DetailParametersUser(context.Context, *DetailParametersUserRequest) (*DetailParametersUserResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DetailParametersUser not implemented")
}
func (*UnimplementedTreningServiceServer) UpdateUserParams(context.Context, *UpdateUserParamsRequest) (*UpdateUserParamsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateUserParams not implemented")
}
func (*UnimplementedTreningServiceServer) UploadImageUser(TreningService_UploadImageUserServer) error {
	return status.Errorf(codes.Unimplemented, "method UploadImageUser not implemented")
}
func (*UnimplementedTreningServiceServer) CreateTrening(context.Context, *CreateTreningRequest) (*CreateTreningResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateTrening not implemented")
}
func (*UnimplementedTreningServiceServer) ListTrening(context.Context, *ListTreningRequest) (*ListTreningResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListTrening not implemented")
}
func (*UnimplementedTreningServiceServer) DetailTrening(context.Context, *DetailTreningRequest) (*DetailTreningResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DetailTrening not implemented")
}
func (*UnimplementedTreningServiceServer) UpdateTreningStatus(context.Context, *UpdateTreningStatusRequest) (*UpdateTreningStatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateTreningStatus not implemented")
}
func (*UnimplementedTreningServiceServer) UpdateTreningExercises(context.Context, *UpdateTreningExercisesRequest) (*UpdateTreningExercisesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateTreningExercises not implemented")
}
func (*UnimplementedTreningServiceServer) CreateExercise(context.Context, *CreateExerciseRequest) (*CreateExerciseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateExercise not implemented")
}
func (*UnimplementedTreningServiceServer) ListExercise(context.Context, *ListExerciseRequest) (*ListExerciseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListExercise not implemented")
}
func (*UnimplementedTreningServiceServer) ListExerciseDefault(context.Context, *ListExerciseRequest) (*ListExerciseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListExerciseDefault not implemented")
}
func (*UnimplementedTreningServiceServer) DetailExercise(context.Context, *DetailExerciseRequest) (*DetailExerciseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DetailExercise not implemented")
}

func RegisterTreningServiceServer(s *grpc.Server, srv TreningServiceServer) {
	s.RegisterService(&_TreningService_serviceDesc, srv)
}

func _TreningService_CreateParametersUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateParametersUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TreningServiceServer).CreateParametersUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/trening.TreningService/CreateParametersUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TreningServiceServer).CreateParametersUser(ctx, req.(*CreateParametersUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TreningService_DetailParametersUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DetailParametersUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TreningServiceServer).DetailParametersUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/trening.TreningService/DetailParametersUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TreningServiceServer).DetailParametersUser(ctx, req.(*DetailParametersUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TreningService_UpdateUserParams_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateUserParamsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TreningServiceServer).UpdateUserParams(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/trening.TreningService/UpdateUserParams",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TreningServiceServer).UpdateUserParams(ctx, req.(*UpdateUserParamsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TreningService_UploadImageUser_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(TreningServiceServer).UploadImageUser(&treningServiceUploadImageUserServer{stream})
}

type TreningService_UploadImageUserServer interface {
	SendAndClose(*UploadImageUserResponse) error
	Recv() (*UploadImageUserRequest, error)
	grpc.ServerStream
}

type treningServiceUploadImageUserServer struct {
	grpc.ServerStream
}

func (x *treningServiceUploadImageUserServer) SendAndClose(m *UploadImageUserResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *treningServiceUploadImageUserServer) Recv() (*UploadImageUserRequest, error) {
	m := new(UploadImageUserRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _TreningService_CreateTrening_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateTreningRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TreningServiceServer).CreateTrening(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/trening.TreningService/CreateTrening",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TreningServiceServer).CreateTrening(ctx, req.(*CreateTreningRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TreningService_ListTrening_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListTreningRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TreningServiceServer).ListTrening(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/trening.TreningService/ListTrening",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TreningServiceServer).ListTrening(ctx, req.(*ListTreningRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TreningService_DetailTrening_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DetailTreningRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TreningServiceServer).DetailTrening(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/trening.TreningService/DetailTrening",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TreningServiceServer).DetailTrening(ctx, req.(*DetailTreningRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TreningService_UpdateTreningStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateTreningStatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TreningServiceServer).UpdateTreningStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/trening.TreningService/UpdateTreningStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TreningServiceServer).UpdateTreningStatus(ctx, req.(*UpdateTreningStatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TreningService_UpdateTreningExercises_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateTreningExercisesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TreningServiceServer).UpdateTreningExercises(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/trening.TreningService/UpdateTreningExercises",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TreningServiceServer).UpdateTreningExercises(ctx, req.(*UpdateTreningExercisesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TreningService_CreateExercise_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateExerciseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TreningServiceServer).CreateExercise(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/trening.TreningService/CreateExercise",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TreningServiceServer).CreateExercise(ctx, req.(*CreateExerciseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TreningService_ListExercise_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListExerciseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TreningServiceServer).ListExercise(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/trening.TreningService/ListExercise",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TreningServiceServer).ListExercise(ctx, req.(*ListExerciseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TreningService_ListExerciseDefault_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListExerciseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TreningServiceServer).ListExerciseDefault(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/trening.TreningService/ListExerciseDefault",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TreningServiceServer).ListExerciseDefault(ctx, req.(*ListExerciseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TreningService_DetailExercise_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DetailExerciseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TreningServiceServer).DetailExercise(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/trening.TreningService/DetailExercise",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TreningServiceServer).DetailExercise(ctx, req.(*DetailExerciseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _TreningService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "trening.TreningService",
	HandlerType: (*TreningServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateParametersUser",
			Handler:    _TreningService_CreateParametersUser_Handler,
		},
		{
			MethodName: "DetailParametersUser",
			Handler:    _TreningService_DetailParametersUser_Handler,
		},
		{
			MethodName: "UpdateUserParams",
			Handler:    _TreningService_UpdateUserParams_Handler,
		},
		{
			MethodName: "CreateTrening",
			Handler:    _TreningService_CreateTrening_Handler,
		},
		{
			MethodName: "ListTrening",
			Handler:    _TreningService_ListTrening_Handler,
		},
		{
			MethodName: "DetailTrening",
			Handler:    _TreningService_DetailTrening_Handler,
		},
		{
			MethodName: "UpdateTreningStatus",
			Handler:    _TreningService_UpdateTreningStatus_Handler,
		},
		{
			MethodName: "UpdateTreningExercises",
			Handler:    _TreningService_UpdateTreningExercises_Handler,
		},
		{
			MethodName: "CreateExercise",
			Handler:    _TreningService_CreateExercise_Handler,
		},
		{
			MethodName: "ListExercise",
			Handler:    _TreningService_ListExercise_Handler,
		},
		{
			MethodName: "ListExerciseDefault",
			Handler:    _TreningService_ListExerciseDefault_Handler,
		},
		{
			MethodName: "DetailExercise",
			Handler:    _TreningService_DetailExercise_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "UploadImageUser",
			Handler:       _TreningService_UploadImageUser_Handler,
			ClientStreams: true,
		},
	},
	Metadata: "api/trening/trening.proto",
}
