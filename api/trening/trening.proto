syntax = "proto3";

package trening;
option go_package = "api/trening;grpcserver";

import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "third_party/mwitkow/go-proto-validators/validator.proto";
import "google/protobuf/duration.proto";
import "google/protobuf/timestamp.proto";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "Trening-Service";
    version: "1.0";
    contact: {
      name: "trening";
      url: "localhost:8843";
    };
  };
  security_definitions: {
    security: {
        key: "bearer";
        value: {
            type: TYPE_API_KEY;
            in: IN_HEADER;
            name: "Authorization";
            description: "Authentication token, prefixed by Bearer: Bearer <token>";
        }
    }
  }
  security: {
    security_requirement: {
      key: "bearer"
    }
  }
  responses: {
    key: "default";
    value: {
      description: "Common error";
      schema: {
        json_schema: {
          ref: "#/definitions/commonCommonError";
        }
      }
    }
  }
};



enum UserActivity {
    Basic = 0;
    Low = 1;
    Light = 2;
    Medium = 3;
    High = 4;
}

enum UserDiet {
    Balanced = 0;
    Low_fat = 1;
    Low_carbs = 2;
    Low_protein = 3;
}

message ParametersUser {
  
   int32 weight  = 1;
   int32 height = 2;
   int32 age = 3;
   int32 gender = 4;
   UserActivity activity = 5;
   UserDiet diet = 6;
   int32 desired_weight = 7;
   int32 eat = 8;
   string username = 9;
}

message CreateParametersUserRequest {
  
   int32 weight  = 1;
   int32 height = 2;
   int32 age = 3;
   int32 gender = 4;
   UserActivity activity = 5;
   UserDiet diet = 6;
   int32 desired_weight = 7;
   int32 eat = 8; 
}

message CreateParametersUserResponse{
   bool status = 1;
   string message = 2;
}


message UpdateUserParamsRequest {
   int32 weight  = 1;
   int32 height = 2;
   int32 age = 3;
   int32 gender = 4;
   UserActivity activity = 5;
   UserDiet diet = 6;
   int32 desired_weight = 7;
   int32 eat = 8; 
   string uid = 9;
}


message UpdateUserParamsResponse{
   bool status = 1;
   string message = 2;
}

message DetailParametersUserRequest{
    string id = 1;
}
message DetailParametersUserResponse{
   bool status = 1;
   string message = 2;
   ParametersUser data = 3;
}


enum StatusTrening {
    Unknown = 0;
    Create = 1;
    Start = 2;
    Stop = 3;
    Pause = 4;
    Break = 5;
    Finish = 6;
}

message Trening{
    string name = 1;
    google.protobuf.Duration interval = 2;
    repeated Exercise exercises = 3;
    string uid = 4;
    StatusTrening status = 5;
    google.protobuf.Timestamp createdat = 6;
    string image = 7;
}

message CreateTreningRequest {
    string name = 1 [(validator.field) = {string_not_empty: true}];
    google.protobuf.Duration interval = 2;
    repeated Exercise exercises = 3; 
}
message CreateTreningResponse{
    bool status = 1;
    string message = 2;
}

message ListTreningRequest{
    StatusTrening status = 1;
}
message ListTreningResponse{
    bool status = 1;
    string message = 2;
    repeated Trening data = 3;
}

message DetailTreningRequest{
    string uid = 1;
}
message DetailTreningResponse{
    bool status = 1;
    string message = 2;
    Trening data = 3;
}


message UpdateTreningStatusRequest{
    StatusTrening status = 1;
    string uid = 2;
}
message UpdateTreningStatusResponse{
    bool status = 1;
    string message = 2;
}

message UpdateTreningExercisesRequest{
    repeated Exercise exercises = 1; 
    string uid = 2;
}
message UpdateTreningExercisesResponse{
    bool status = 1;
    string message = 2;
}

enum ExerciseType {
    arms = 0;
    legs = 1;
    press = 2;
    back = 3;
    chest = 4;
    shoulder = 5;
    triceps = 6;
    biceps = 7;
    other = 8;
}

message Exercise {
    string name = 1 [(validator.field) = {string_not_empty: true, regex: "^[a-zA-Z0-9_.-]*$"}];
    google.protobuf.Duration duration = 2;
    google.protobuf.Duration relax = 3;
    int32 count = 4;
    int32 number_of_sets         = 5;
	int32 number_of_repetitions  = 6;
    ExerciseType type = 7;
    string uid = 8;
    string image = 9;
    string video = 10;
    string description = 11;
    string technique = 12;
    string mistake = 13;
    int32 weight = 14;
    string category = 15;
    string subcategory = 16;
}

message CreateExerciseRequest {
    
    string name = 1;
    google.protobuf.Duration duration = 2;
    google.protobuf.Duration relax = 3;
    int32 count = 4;
    int32 number_of_sets         = 5;
	int32 number_of_repetitions  = 6;
    ExerciseType type = 7;
}
message CreateExerciseResponse{
    bool status = 1;
    string message = 2;
}

message ListExerciseRequest{
    string type = 1;
}
message ListExerciseResponse{
    bool status = 1;
    string message = 2;
    repeated Exercise data = 3;
}

message DetailExerciseRequest{
    string uid = 1;
}
message DetailExerciseResponse{
    bool status = 1;
    string message = 2;
    Exercise data = 3;
}



service TreningService {

    rpc CreateParametersUser(CreateParametersUserRequest) returns (CreateParametersUserResponse) {
        option (google.api.http) = {
            post: "/user/parameters"
            body: "*"
        };
        // option (grpc.gateway.protoc_gen_swagger.options.openapiv2_swagger) = {
        //    security: { } // Disable security key
        // };
    }
    rpc DetailParametersUser(DetailParametersUserRequest) returns (DetailParametersUserResponse) {
        option (google.api.http) = {
            get: "/user/parameters"
        };
    }
    rpc UpdateUserParams(UpdateUserParamsRequest) returns (UpdateUserParamsResponse) {
        option (google.api.http) = {
            put: "/user/parameters"
            body: "*"
        };
    }

    rpc CreateTrening(CreateTreningRequest) returns (CreateTreningResponse) {
        option (google.api.http) = {
            post: "/user/trening"
            body: "*"
        };
    }
    rpc ListTrening(ListTreningRequest) returns (ListTreningResponse) {
        option (google.api.http) = {
            get: "/user/trenings"
        };
    }
    rpc DetailTrening(DetailTreningRequest) returns (DetailTreningResponse) {
        option (google.api.http) = {
            get: "/user/trening"
        };
    }
    rpc UpdateTreningStatus(UpdateTreningStatusRequest) returns (UpdateTreningStatusResponse) {
        option (google.api.http) = {
            put: "/user/trening/status"
            body: "*"
        };
    }

    rpc UpdateTreningExercises(UpdateTreningExercisesRequest) returns (UpdateTreningExercisesResponse) {
        option (google.api.http) = {
            put: "/user/trening/exercises"
            body: "*"
        };
    }

    rpc CreateExercise(CreateExerciseRequest) returns (CreateExerciseResponse) {
        option (google.api.http) = {
            post: "/user/exercise"
            body: "*"
        };
    }
    rpc ListExercise(ListExerciseRequest) returns (ListExerciseResponse) {
        option (google.api.http) = {
            get: "/user/exercises"
        };
    }
    rpc ListExerciseDefault(ListExerciseRequest) returns (ListExerciseResponse) {
        option (google.api.http) = {
            get: "/user/exercises/default"
        };
    }
    rpc DetailExercise(DetailExerciseRequest) returns (DetailExerciseResponse) {
        option (google.api.http) = {
            get: "/user/exercise"
        };
    }

}